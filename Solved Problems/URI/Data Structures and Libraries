#include <bits/stdc++.h>

using namespace std;

int binary_search( vector<int> v , int lower_bound , int upper_bound , int target ){
    int sol = -1;

    while ( lower_bound <= upper_bound ) {
        int mid = (lower_bound + upper_bound)/2;
        if ( v[mid] == target ){
            sol = mid;
            while( sol - 1 >= 0 && v[sol - 1] == target )
                sol--;
            break;
        }
        else if ( v[mid] < target ){
            lower_bound = mid + 1;
        }
        else if ( v[mid] > target ){
            upper_bound = mid - 1;
        }
    }
    return sol;
}

int main(){
    int N,Q, t = 1;

    while ( cin >> N >> Q ){
        if ( N == 0 && Q == 0 )break;

        printf("CASE# %d:\n", t++);

        vector<int> v(N);
        for ( int n = 0 ; n < N ; ++n ){
            cin >> v[n];
        }

        sort(v.begin(),v.end());
        for ( int q = 0 ; q < Q ; ++q ){

            int query;
            cin >> query;
            int sol = binary_search(v, 0, N - 1, query);
            if ( sol == -1 ){
                cout << query << " not found" << endl;
            }
            else{
                cout << query << " found at " << sol + 1 << endl;
            }
        }
    }
}
